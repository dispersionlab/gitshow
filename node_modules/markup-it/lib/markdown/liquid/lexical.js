'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _utils = require('../utils');

// quote related
var singleQuoted = /'(?:[^'\\]|\\.)*'/; /* eslint-disable no-unexpected-multiline, no-spaced-func */

var doubleQuoted = /"(?:[^"\\]|\\.)*"/;
var quoted = (0, _utils.replace)(/singleQuoted|doubleQuoted/)('singleQuoted', singleQuoted)('doubleQuoted', doubleQuoted)();

// basic types
var integer = /-?\d+/;
var number = /-?\d+\.?\d*|\.?\d+/;
var bool = /true|false/;

// property access
var identifier = /[\w-]+/;
var literal = (0, _utils.replace)(/(?:quoted|bool|number)/)('quoted', quoted)('bool', bool)('number', number)();

// Match inner of the tag to split the name and the props
var tagLine = (0, _utils.replace)(/^\s*(identifier)\s*(.*)\s*$/)('identifier', identifier)();

// Types
var numberLine = (0, _utils.replace)(/^number$/)('number', number)();
var boolLine = (0, _utils.replace)(/^bool$/i)('bool', bool)();
var quotedLine = (0, _utils.replace)(/^quoted$/)('quoted', quoted)();

// Assignment of a variable message="Hello"
var assignment = (0, _utils.replace)(/(identifier)\s*=\s*(literal)/)('identifier', identifier)('literal', literal)();

// Argument or kwargs
var delimiter = /(?:\s*|^)/;
var prop = (0, _utils.replace)(/(?:delimiter)(?:(assignment|literal))/)('literal', literal)('delimiter', delimiter)('assignment', assignment)();

exports.default = {
    prop: prop,
    quoted: quoted,
    number: number,
    bool: bool,
    literal: literal,
    integer: integer,
    identifier: identifier,
    quotedLine: quotedLine,
    numberLine: numberLine,
    boolLine: boolLine,
    tagLine: tagLine
};