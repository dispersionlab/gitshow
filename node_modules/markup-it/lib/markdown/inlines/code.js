'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _ = require('../../');

var _inline = require('../re/inline');

var _inline2 = _interopRequireDefault(_inline);

var _utils = require('../utils');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

/**
 * Serialize a code text to markdown
 * @type {Serializer}
 */
var serialize = (0, _.Serializer)().transformMarkedLeaf(_.MARKS.CODE, function (state, text, mark) {
    var separator = '`';

    // We need to find the right separator not present in the content
    while (text.indexOf(separator) >= 0) {
        separator += '`';
    }

    return (0, _utils.wrapInline)(text, separator);
});

/**
 * Deserialize a code.
 * @type {Deserializer}
 */
var deserialize = (0, _.Deserializer)().matchRegExp(_inline2.default.code, function (state, match) {
    var text = match[2];
    var mark = _.Mark.create({ type: _.MARKS.CODE });

    var node = _.Text.create({ text: text, marks: [mark].concat(_toConsumableArray(state.marks)) });
    return state.push(node);
});

exports.default = { serialize: serialize, deserialize: deserialize };