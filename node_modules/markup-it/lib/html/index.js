'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _blocks = require('./blocks');

var _blocks2 = _interopRequireDefault(_blocks);

var _inlines = require('./inlines');

var _inlines2 = _interopRequireDefault(_inlines);

var _document = require('./document');

var _document2 = _interopRequireDefault(_document);

var _ignoreNode = require('./ignoreNode');

var _ignoreNode2 = _interopRequireDefault(_ignoreNode);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var ALL = [].concat(_toConsumableArray(_blocks2.default), _toConsumableArray(_inlines2.default), [_ignoreNode2.default // Default catch-all rule
]);

// We don't use groups of rules such as 'block' and 'inline' for
// deserialization, because we have a single deserialization rule 'document'.
//
// For serialization, there is no ambiguity in the Slate
// format, so we always use all the rules at the same time.
exports.default = {
    document: [_document2.default],
    block: ALL
};