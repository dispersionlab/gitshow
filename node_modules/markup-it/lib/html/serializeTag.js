'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _is = require('is');

var _is2 = _interopRequireDefault(_is);

var _immutable = require('immutable');

var _escape = require('./escape');

var _escape2 = _interopRequireDefault(_escape);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @param {String} tag The HTML tag
 * @param {Boolean} [opts.isSingleTag=false] Render as self-closing tag
 * @param {Function} [opts.getAttrs] Function to get the HTML
 * attributes of the tag, as an Object
 * @return {Function} A function to seralize a node into an HTML tag
 */
function serializeTag(tag) {
    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var _opts$isSingleTag = opts.isSingleTag,
        isSingleTag = _opts$isSingleTag === undefined ? false : _opts$isSingleTag,
        _opts$getAttrs = opts.getAttrs,
        getAttrs = _opts$getAttrs === undefined ? function (node) {} : _opts$getAttrs;


    return function (state) {
        var node = state.peek();
        var attrs = getAttrs(node);
        var attrsText = attrsToString(attrs);

        var text = void 0;
        if (isSingleTag) {
            text = '<' + tag + attrsText + '/>';
        } else {
            var inner = state.serialize(node.nodes);
            text = '<' + tag + attrsText + '>' + inner + '</' + tag + '>';
        }

        return state.shift().write(text);
    };
}

/**
 * Convert a map of attributes into a string of HTML attributes.
 * @param {Object} attrs
 * @return {String}
 */
function attrsToString(attrsObject) {
    var attrs = new _immutable.Map(attrsObject);

    return attrs.reduce(function (output, value, key) {
        if (_is2.default.undef(value) || _is2.default.nil(value)) {
            return output;
        } else if (_is2.default.equal(value, '')) {
            return output + ' ' + key;
        }
        return output + ' ' + key + '="' + (0, _escape2.default)(value) + '"';
    }, '');
}

exports.default = serializeTag;